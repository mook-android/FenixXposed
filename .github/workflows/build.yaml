name: Build

on: [push]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      project_name: ${{ steps.project_name.outputs.PROJECT_NAME }}
    steps:
      - uses: actions/checkout@v3
      - name: Add Android tools to PATH
        run: |
          sdkver="$(ls -1 "${ANDROID_SDK_ROOT}/build-tools" | tail -n 1)"
          echo "${ANDROID_SDK_ROOT}/build-tools/${sdkver}" >> "${GITHUB_PATH}"
      - uses: actions/setup-java@v3
        with:
          java-version: 19
          distribution: temurin
      - uses: gradle/wrapper-validation-action@v1
      - uses: gradle/gradle-build-action@v2
      - run: |
          chmod a+x ./gradlew
          version="${ref#refs/tags/}"
          if [[ "${ref}" != "${version}" ]]; then
            ./gradlew app:assembleRelease -P versionString="${version#v}"
          else
            ./gradlew app:assembleRelease
          fi
        env:
          ref: ${{ github.ref }}
      - run: echo "PROJECT_NAME=${REPO##*/}" >> "$GITHUB_OUTPUT"
        id: project_name
        env:
          REPO: ${{ github.repository }}
      - name: Sign
        if: env.SIGNING_KEYSTORE && env.SIGNING_PASSWORD
        run: |
          set -o errexit
          keystore="$(mktemp --suffix=.jks)"
          trap "rm -f '${keystore}'" EXIT
          echo "${SIGNING_KEYSTORE}" | base64 -d > "${keystore}"
          zipalign -v -p 4 app-release-unsigned.apk app-release-aligned.apk
          apksigner sign --ks "${keystore}" --ks-pass "env:SIGNING_PASSWORD" --verbose \
            --in app-release-aligned.apk --out "${{ steps.project_name.outputs.PROJECT_NAME }}.apk"
          rm app-release-unsigned.apk app-release-aligned.apk
        env:
          SIGNING_KEYSTORE: ${{ secrets.ANDROID_SIGNING_KEYSTORE }}
          SIGNING_PASSWORD: ${{ secrets.ANDROID_SIGNING_PASSWORD }}
        working-directory: app/build/outputs/apk/release/
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.project_name.outputs.PROJECT_NAME }}.apk
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: error
  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.project_name }}.apk
      - run: mv *.apk "${{ needs.build.outputs.project_name}}-${{ github.ref_name }}.apk"
      - name: Draft Release
        run: >
          gh release create
          --draft
          --generate-notes
          --target "${{ github.sha }}"
          --title "${{ github.ref_name }}"
          --repo "${{ github.repository }}"
          "${{ github.ref_name }}"
          *.apk
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
